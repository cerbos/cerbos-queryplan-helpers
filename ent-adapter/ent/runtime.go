// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/cerbos/cerbos-go-adapters/ent-adapter/ent/company"
	"github.com/cerbos/cerbos-go-adapters/ent-adapter/ent/contact"
	"github.com/cerbos/cerbos-go-adapters/ent-adapter/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	companyFields := schema.Company{}.Fields()
	_ = companyFields
	// companyDescCreatedAt is the schema descriptor for created_at field.
	companyDescCreatedAt := companyFields[0].Descriptor()
	// company.DefaultCreatedAt holds the default value on creation for the created_at field.
	company.DefaultCreatedAt = companyDescCreatedAt.Default.(func() time.Time)
	// companyDescUpdatedAt is the schema descriptor for updated_at field.
	companyDescUpdatedAt := companyFields[1].Descriptor()
	// company.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	company.DefaultUpdatedAt = companyDescUpdatedAt.Default.(func() time.Time)
	contactFields := schema.Contact{}.Fields()
	_ = contactFields
	// contactDescCreatedAt is the schema descriptor for created_at field.
	contactDescCreatedAt := contactFields[0].Descriptor()
	// contact.DefaultCreatedAt holds the default value on creation for the created_at field.
	contact.DefaultCreatedAt = contactDescCreatedAt.Default.(func() time.Time)
	// contactDescUpdatedAt is the schema descriptor for updated_at field.
	contactDescUpdatedAt := contactFields[1].Descriptor()
	// contact.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contact.DefaultUpdatedAt = contactDescUpdatedAt.Default.(func() time.Time)
}
